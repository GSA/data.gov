#!/bin/bash

function check_running_job {
    [[ $# -eq 0 ]] && echo "Error: no app provided" && exit 1

    # Get wait arugment if supplied
    if [[ -n $2 && $2 == '--wait' ]]; then
        wait_for_app='true'
    fi

    # Input any app name
    if [[ -n "$1" ]]; then
        if [[ $1 == '--wait' ]]; then
            echo "Error: no app provided"
            exit 1
        fi
        app_to_check=$1
    fi

    # Check jq
    if ! command -v jq &> /dev/null
    then
        apt install -y jq
    fi

    # Check if deployment is happening, if so ignore
    guid=$(cf app "$app_to_check" --guid)
    running=$(\
        cf curl "/v3/deployments?status_values=ACTIVE" \
        | jq --arg guid "$guid" \
            ".resources[] |
            select(.relationships.app.data.guid == \$guid ) |
            .relationships.app.data.guid" \
    )
    if [[ $running != "" ]]; then
        if [[ $wait_for_app == 'true' ]]; then
                echo "Waiting on currently running job $app_to_check.."
                sleep 10
                check_running_job "$1" "$2"
        else
            echo "Deployment in progress for $app_to_check, not doing anything"
            exit 0
        fi
    else
        echo "No job running for app $app_to_check"
        exit 1
    fi

    # If there is more than one instance of 'instances', the app is already restarting
    if [[ $(cf app "$app_to_check" | grep -c '^instances:') -gt 1 ]]; then
      echo "Deployment or Restart in progress... not doing anything"
      exit 0
    fi
}

check_running_job "$@"
