version: 2
jobs:
  lint:
    docker:
      - image: circleci/python:3.6
    environment:
      PIPENV_VENV_IN_PROJECT: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-pipenv-{{ checksum "Pipfile.lock" }}
            - v6-pipenv-
      - run: echo Test; pipenv sync --dev
      - run: pipenv run make vendor
      - run: pipenv run make lint

  # Snapshots the dependencies. Snyk will send notifications if any new
  # vulnerabilities appear for this snapshot. This should only be run on
  # `master`, since it represents the state of shipped dependencies.
  snyk-monitor:
    docker:
      - image: circleci/python:3.6-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-pipenv-{{ checksum "Pipfile.lock" }}
            - v6-pipenv-
      - run: pipenv sync --dev
      - run:
          name: install snyk
          command: sudo npm install -g snyk
      - run: snyk monitor --project-name=GSA/data.gov --org=data.gov

  snyk-test:
    docker:
      - image: circleci/python:3.6-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-pipenv-{{ checksum "Pipfile.lock" }}
            - v6-pipenv-
      - run: pipenv sync --dev
      - run:
          name: install snyk
          command: sudo npm install -g snyk
      - run: snyk test --dev --project-name=GSA/data.gov --org=data.gov

  test:
    docker:
      - image: circleci/python:3.6
    parallelism: 5
    environment:
      PIPENV_VENV_IN_PROJECT: 1
    steps:
      - checkout
      - setup_remote_docker
      # Restore cache and install python dependencies
      - restore_cache:
          keys:
            - v6-pipenv-{{ checksum "Pipfile.lock" }}
            - v6-pipenv-
      - run:
          name: install python dependencies
          command: |
            pipenv clean
            pipenv sync --dev
      - run:
          name: Setup ansible-galaxy
          command: pipenv run make vendor
      - save_cache:
          key: v6-pipenv-{{ checksum "Pipfile.lock" }}
          paths:
            - .venv
            - ansible/roles/vendor
      - run:
          name: Run tests
          command: |
            TEST_TARGETS=$(make circleci-glob | circleci tests split)
            pipenv run make ${TEST_TARGETS}

workflows:
  version: 2
  commit:
    jobs:
      - lint
      - snyk-test
      - test
      - snyk-monitor:
          filters:
            branches:
              only:
                - master
