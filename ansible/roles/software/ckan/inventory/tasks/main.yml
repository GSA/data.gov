---
- name: Install build dependencies
  apt: name={{ packages }} state=present
  vars:
    packages:
      - memcached
      - swig
      - xmlsec1
      - cron
      - supervisor

- name: Create log directory
  file: path={{ inventory_log_dir }} state=directory owner=root group=www-data mode=0750

- name: Remove old rollback code
  file: path="{{ project_source_rollback_path }}" state=absent

- name: Check whether new code dir exists
  stat: path="{{ project_source_new_code_path }}"
  register: p

- name: Create rollback code
  command: "mv {{ project_source_new_code_path }} {{ project_source_rollback_path }}"
  when: p.stat.isdir is defined and p.stat.isdir

- name: Symlink current dir with rollback code
  file:
    src: "{{ project_source_rollback_path }}"
    path: "{{ current_source_symlink }}"
    state: link
  when: p.stat.isdir is defined and p.stat.isdir

- name: Remove new code
  file: path="{{ project_source_new_code_path }}" state=absent

- name: Check if new relic log exists
  stat: path=/var/log/inventory/new_relic.log
  register: nr_log

- name: Create NR log if it doesn't exist
  file:
    path=/var/log/inventory/new_relic.log owner=root group=www-data mode=0644 state=touch
  when: not nr_log.stat.exists

- name: Clone Inventory app
  git:
    force: yes
    umask: "0022"
    repo: '{{ inventory_app_repo }}'
    dest: '{{ inventory_app_source_path }}'
    version: '{{ inventory_app_repo_branch }}'

- name: setup virtualenv for new deployment
  pip:
    name:
      - pip==20.3.3  # pip 21 no longer supports python 2
      - setuptools>=44.0.0,<45.0.0  # setuptools 45+ requires python 3.5, keep pinned below, but still modern version
    virtualenv: '{{ project_source_new_code_path }}'
    virtualenv_python: "{{ inventory_python_home }}/bin/python"
    umask: "0022"

- name: install inventory app from requirements
  pip:
    requirements: "{{ inventory_app_source_path }}/requirements-freeze.txt"
    virtualenv: '{{ project_source_new_code_path }}'
    virtualenv_python: "{{ inventory_python_home }}/bin/python"
    umask: "0022"
  notify: restart ckan

- name: install repoze.who library for local login (if saml disabled)
  pip:
    name: repoze.who~=2.3
    virtualenv: "{{ project_source_new_code_path }}"
    umask: '0022'
    state: present
  when:
    - not inventory_ckan_saml2_enabled
  notify: restart ckan

- name: create directories
  action: file path={{ item }} state=directory owner="www-data" group="www-data" mode=0755 recurse=yes
  with_items:
    - /var/lib/ckan/files/storage

- name: Configure who.ini
  template:
    src: "{{ inventory_ckan_who_ini_path }}"
    dest: /etc/ckan/who.ini
    owner: root
    group: www-data
    mode: 0640
  notify:
    - restart ckan

- name: Configure production.ini
  template:
    src: "{{ ckan_production_ini_template }}"
    dest: /etc/ckan/production.ini
    owner: root
    group: www-data
    mode: 0640
  notify:
    - restart ckan

- include_tasks: saml2.yml
  when: inventory_ckan_saml2_enabled

- name: Configure apache file
  template: src={{ item }} dest=/{{ item }} owner=root group=www-data mode=0640
  with_items:
    - etc/apache2/sites-enabled/ckan.conf
  notify:
    - restart apache2

- name: Copy app .env
  template:
    src: app_env.j2
    dest: /etc/ckan/.env
    mode: 0640
    owner: root
    group: www-data
  become: true
  notify:
    - restart ckan

- name: Remove old supervisor files
  file:
    path: /etc/supervisor/conf.d/gunicorn-web-app.conf
    state: absent
  become: true
  when: inventory_next
  notify:
    - reload supervisor

- name: Configure inventory-classic server
  template:
    src: etc/supervisor/conf.d/gunicorn-web-app.conf
    dest: /etc/supervisor/conf.d/gunicorn-web-app.conf
    owner: root
    group: www-data
    mode: 0640
  when: not inventory_next
  notify:
    - reload supervisor

- name: Configure inventory-next server
  template:
    src: etc/supervisor/conf.d/gunicorn-web-app-next.conf
    dest: /etc/supervisor/conf.d/gunicorn-web-app-next.conf
    owner: root
    group: www-data
    mode: 0640
  when: inventory_next
  notify:
    - reload supervisor

- name: Copy CKAN gunicorn.conf.py
  copy:
    src: "{{ inventory_app_source_path }}/config/gunicorn.conf.py"
    dest: /etc/ckan/gunicorn.conf.py
    mode: 0644
    remote_src: true
  become: true
  when: inventory_next
  notify:
    - restart ckan

- name: Copy CKAN server_start.sh
  copy:
    src: "{{ inventory_app_source_path }}/config/server_start.sh"
    dest: /etc/ckan/server_start.sh
    mode: 0755
    remote_src: true
  become: true
  when: inventory_next
  notify:
    - restart ckan

- include_tasks: datapusher-next.yml
  tags:
    - datapusher
  when: inventory_next

- include_tasks: datapusher-classic.yml
  tags:
    - datapusher
  when: not inventory_next

- include_tasks: additional-tasks.yml
  vars:
    virtualenv: "{{ project_source_new_code_path }}"

- name: fix virtualenv permissions
  file: path={{ item }} state=directory group=www-data recurse=yes
  with_items:
    - "{{ datapusher_virtual_env }}"
    - "{{ project_source_new_code_path }}"

- name: Symlink current dir with new code
  file:
    src: "{{ project_source_new_code_path }}"
    path: "{{ current_source_symlink }}"
    state: link
  notify:
    - restart ckan

- name: ensure supervisor is started and enabled
  service: name=supervisor state=started enabled=yes

- name: Ensure apache2 is started and enabled
  service: name=apache2 enabled={{ datagov_in_service | ternary('true', 'false') }} state={{ datagov_in_service | ternary('started', 'stopped') }}
