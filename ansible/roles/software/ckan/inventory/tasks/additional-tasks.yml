---
- include: build-pkgs.yml
  vars:
    build_pkg_name: "ckanext-s3filestore"
    build_pkg_repo: "https://github.com/GSA/ckanext-s3filestore"
    build_pkg_requirements: "requirements.txt"
  tags: ['s3filestore']
  when:
    - not inventory_next

- name: copy datajson export map
  copy:
    src: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.inventory.map.sample.json"
    dest: "{{ virtualenv }}/src/ckanext-datajson/ckanext/datajson/export_map/export.map.json"
    owner: root
    group: www-data
    mode: '0644'
    remote_src: true
  notify: restart ckan

- name: install inventory db init script
  copy: src=inventory-db-init.py dest=/usr/local/bin/inventory-db-init.py owner=root group=root mode=0755

- name: Update CKAN translation files
  command: "{{ project_source_new_code_path }}/bin/paster --plugin=ckan trans js -c /etc/ckan/production.ini"
  when:
    - inventory_next
    - db_is_setup
    - datagov_in_service
  become: true
  notify: restart ckan

- name: Copy inventory-publishers.csv
  copy:
    src: "{{ playbook_dir }}/files/inventory-publishers.csv"
    dest: "/var/tmp/publishers.csv"
  when:
    - db_is_setup
    - datagov_in_service

- name: Load publishers.csv from previous task
  command: |
    {{ project_source_new_code_path }}/bin/paster
    --plugin=ckanext-dcat_usmetadata
    publishers-import /var/tmp/publishers.csv -c /etc/ckan/production.ini
  when:
    - db_is_setup
    - datagov_in_service
  become: true
  register: publishers_result
  failed_when: publishers_result.rc != 0

- name: Fail when publishers.csv is not loaded
  fail:
    msg: "At least one real orgnization need to be created, such as General Services Administration"
  when: publishers_result.stdout is defined and "Updated publishers" not in publishers_result.stdout

- name: install beaker cache cleanup script
  template: src=beaker-cache-cleanup.sh.j2 dest=/usr/local/bin/beaker-cache-cleanup.sh owner=root group=root mode=0755

- name: install pgpass file for beaker-cache-cleanup
  copy:
    content: |
      {{ inventory_ckan_db_host }}:5432:{{ inventory_db_name }}:{{ inventory_db_user }}:{{ inventory_db_pass }}
    # TODO should be an app user variable
    dest: /root/.pgpass
    mode: "0600"
    owner: root
    group: root

- name: copy supervisord config
  copy:
    src: beaker-cache-cleanup.conf
    dest: /etc/supervisor/conf.d/beaker-cache-cleanup.conf
    mode: "0644"
    owner: root
    group: root
  notify: reload supervisor

- name: schedule beaker-cache-cleanup cron
  cron:
    name: "clean beaker cache in db"
    cron_file: ckan
    job: supervisorctl start beaker-cache-cleanup > /dev/null
    minute: "5"
    hour: "11"
    user: root
    disabled: "{{ not crons_enabled }}"
    state: present
  tags: ['cron']
